name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'
    tags:
      - '*-test'
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  get-metadata:
    runs-on: ubuntu-latest
    outputs:
      build_datetime: ${{ steps.metadata.outputs.build_datetime }}
      build_timestamp: ${{ steps.metadata.outputs.build_timestamp }}
      build_epoch: ${{ steps.metadata.outputs.build_epoch }}
    steps:
      - id: metadata
        run: |
          datetime=$(date -u +'%Y-%m-%dT%H:%M:%S%z')
          echo "build_datetime=$datetime" >> $GITHUB_OUTPUT
          echo "build_timestamp=$(date --date=$datetime -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "build_epoch=$(date --date=$datetime -u +'%s')" >> $GITHUB_OUTPUT
          echo "triggering tag: ${{github.ref_name}}"
  extract-branch-name:
    runs-on: ubuntu-latest
    outputs:
      branch_name: "${{ steps.extract_branch.outputs.branch_name }}"
    steps:
      - id: extract_branch
        name: Extract branch name
        shell: bash
          # run: echo "branch_name=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        run: |
          echo "branch name:$GITHUB_REF"
          echo "head ref: $GITHUB_HEAD_REF"
          echo "branch_name=${GITHUB_REF}" >> $GITHUB_OUTPUT
  scan-secrets:
    uses: ./.github/workflows/scan-secrets.yaml
  check-file-format:
    uses: ./.github/workflows/check-file-format.yaml
  check-markdown-format:
    uses: ./.github/workflows/check-markdown-format.yaml
  check-terraform-format:
      uses: ./.github/workflows/check-terraform-format.yaml
  validate-terraform:
    name: Validate terraform code
    uses: ./.github/workflows/validate-terraform.yaml
    with:
      ENV: dev
    secrets: inherit
  check-python-black-format:
      uses: ./.github/workflows/check-python-black-format.yaml
  check-python-flake-rules:
      uses: ./.github/workflows/check-python-flake-rules.yaml
  cloc-repository:
    uses: ./.github/workflows/cloc-repository.yaml
  cicd-pipeline-test:
    runs-on: ubuntu-latest
    needs:
      [
        get-metadata,
        scan-secrets,
        check-file-format,
        check-markdown-format,
        check-terraform-format,
        check-python-black-format,
        check-python-flake-rules,
        cloc-repository,
      ]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: List Variables
        run: |
          export BUILD_DATETIME="${{ needs.get-metadata.outputs.build_datetime }}"
          export BUILD_TIMESTAMP="${{ needs.get-metadata.outputs.build_timestamp }}"
          export BUILD_EPOCH="${{ needs.get-metadata.outputs.build_epoch }}"
          make list-variables
      # - name: Run Tests ...
      #   run: |
      #     ?
  orchestrate-terraform:
      needs:
        [
          extract-branch-name,
          cicd-pipeline-test,
        ]
      uses: ./.github/workflows/orchestrate-terraform.yaml
      with:
        service_environment: dev
      secrets: inherit
