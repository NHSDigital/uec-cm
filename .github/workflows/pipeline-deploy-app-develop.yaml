name: Pipeline Deployment Application Development Environment

on:
  push:
    branches:
      - main
      - 'task/*'

jobs:
  derive-tf-versions:
    uses: ./.github/workflows/derive-tf-version.yaml
  get-metadata:
    runs-on: ubuntu-latest
    outputs:
      build_datetime: ${{ steps.metadata.outputs.build_datetime }}
      build_timestamp: ${{ steps.metadata.outputs.build_timestamp }}
      build_epoch: ${{ steps.metadata.outputs.build_epoch }}
    steps:
      - id: metadata
        run: |
          datetime=$(date -u +'%Y-%m-%dT%H:%M:%S%z')
          echo "build_datetime=$datetime" >> $GITHUB_OUTPUT
          echo "build_timestamp=$(date --date=$datetime -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "build_epoch=$(date --date=$datetime -u +'%s')" >> $GITHUB_OUTPUT
          echo "triggering action: ${{ github.event_name }}"
          echo "ref type: ${{ github.ref_type }}"
          echo "triggering reference: ${{ github.ref_name }}"
  scan-secrets:
    uses: ./.github/workflows/scan-secrets.yaml
  check-file-format:
    uses: ./.github/workflows/check-file-format.yaml
  check-markdown-format:
    uses: ./.github/workflows/check-markdown-format.yaml
  check-terraform-format:
      uses: ./.github/workflows/check-terraform-format.yaml
  validate-terraform:
    name: Validate terraform code
    uses: ./.github/workflows/validate-terraform.yaml
    needs: derive-tf-versions
    with:
      ENV: dev
      tf_vers: ${{needs.derive-tf-versions.outputs.maxVersion}}
    secrets: inherit
  check-python-black-format:
      uses: ./.github/workflows/check-python-black-format.yaml
  check-python-flake-rules:
      uses: ./.github/workflows/check-python-flake-rules.yaml
  cloc-repository:
    uses: ./.github/workflows/cloc-repository.yaml
