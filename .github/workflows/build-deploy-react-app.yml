name: Build and Deploy React App

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm ci
        working-directory: src/frontend

      - name: Build React app
        run: npm run build
        working-directory: src/frontend

      - name: Extract Workspace Name and Issue Key
        id: extract
        run: |
          WORKSPACE=$(echo ${GITHUB_REF#refs/heads/} | cut -d'/' -f 2)
          echo "::set-output name=workspace::$WORKSPACE"
          ISSUE_KEY=$(echo $WORKSPACE | cut -d'-' -f 1)
          echo "::set-output name=issue_key::$ISSUE_KEY"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/uec-cm-github-runner
          role-session-name: github-pipeline-session
          aws-region: eu-west-1

      - name: Find S3 Bucket
        id: find_bucket
        run: |
          for bucket in $(aws s3api list-buckets --query "Buckets[].Name" --output text)
          do
            echo "Checking bucket $bucket"
            bucket_suffix=$(echo $bucket | cut -d'-' -f 5)
            if [ "$bucket_suffix" == "${{ steps.extract.outputs.issue_key }}" ]; then
              echo "Found matching bucket: $bucket"
              echo "::set-output name=bucket_name::$bucket"
              break
            fi
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy React App
        run:  aws s3 cp build/ s3://${{ steps.find_bucket.outputs.bucket_name }}/ --recursive
        working-directory: src/frontend
