name: New Build And Deploy React App

on:
  workflow_call:
    inputs:
      github_environment:
        description: "Defines the Github environment in which to pull environment variables from"
        required: true
        type: string
      deployment_workspace:
        description: 'Name of the terraform workspace to spin up the service infrastructure'
        required: false
        type: string

jobs:
  build-and-deploy-react-app:
    runs-on: ubuntu-latest
    environment: ${{ inputs.github_environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci
        working-directory: src/frontend

      - name: Run Linter
        run: npm run lint
        working-directory: src/frontend

      - name: Run Unit Tests
        run: |
          /bin/bash ./scripts/npm-unit-tests.sh

      - name: Build React app
        run: npm run build
        working-directory: src/frontend

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/uec-cm-github-runner
          role-session-name: github-pipeline-session
          aws-region: ${{ vars.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Handle Deployment Workspace and Bucket Name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | awk -F/ '{print $2}')
          ENVIRONMENT=${{ inputs.github_environment }}
          WORKSPACE=${{ inputs.deployment_workspace }}

          echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_ENV
          echo "WORKSPACE=${WORKSPACE}" >> $GITHUB_ENV

          if [[ "${WORKSPACE}" == "default" ]]; then
            BUCKET_NAME="nhse-${REPO_NAME}-${ENVIRONMENT}-front-end"
          else
            BUCKET_NAME="nhse-${REPO_NAME}-${ENVIRONMENT}-front-end-${WORKSPACE}"
          fi
          echo "BUCKET_NAME=${BUCKET_NAME}" >> $GITHUB_ENV
        shell: bash

      - name: Use Bucket Name
        run: |
          echo "Bucket: ${BUCKET_NAME}"

      - name: Deploy React App
        run: |
          aws s3 sync build/ s3://${{ env.BUCKET_NAME }}/
        working-directory: src/frontend

      - name: Get CloudFront Distribution ID
        run: |
          echo "DISTRIBUTION_ID=$(/bin/bash ./scripts/get-front-end-cloudfront-distribution.sh)" >> $GITHUB_ENV

      - name: Invalidate CloudFront Cache
        run: |
          /bin/bash ./scripts/invalidate-cloudfront-cache.sh
